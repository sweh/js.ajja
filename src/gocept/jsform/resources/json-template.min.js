






var log=log||function(){};var repr=repr||function(){};var jsontemplate=function(){function EscapeMeta(meta){return meta.replace(/([\{\}\(\)\[\]\|\^\$\-\+\?])/g,'\\$1');}
var token_re_cache={};function _MakeTokenRegex(meta_left,meta_right){var key=meta_left+meta_right;var regex=token_re_cache[key];if(regex===undefined){var str='('+EscapeMeta(meta_left)+'.*?'+EscapeMeta(meta_right)+'\n?)';regex=new RegExp(str,'g');}
return regex;}

function HtmlEscape(s){return s.replace(/&/g,'&amp;').replace(/>/g,'&gt;').replace(/</g,'&lt;');}
function HtmlTagEscape(s){return s.replace(/&/g,'&amp;').replace(/>/g,'&gt;').replace(/</g,'&lt;').replace(/"/g,'&quot;');}
function ToString(s){if(s===null){return'null';}
return s.toString();}
function _Pluralize(value,unused_context,args){var s,p;switch(args.length){case 0:s='';p='s';break;case 1:s='';p=args[0];break;case 2:s=args[0];p=args[1];break;default: throw{name:'EvaluationError',message:'pluralize got too many args'};}
return(value>1)?p:s;}
function _Cycle(value,unused_context,args){return args[(value-1)%args.length];}
var DEFAULT_FORMATTERS={'html':HtmlEscape,'htmltag':HtmlTagEscape,'html-attr-value':HtmlTagEscape,'str':ToString,'raw':function(x){return x;},'AbsUrl':function(value,context){ return context.get('base-url')+'/'+value;},'plain-url':function(x){return'<a href="'+HtmlTagEscape(x)+'">'+HtmlEscape(x)+'</a>';}};var _TestAttribute=function(unused,context,args){var name=args[0];if(name===undefined){throw{name:'EvaluationError',message:'The "test" predicate requires an argument.'};}
try{return context.get(name);}catch(err){if(err.name=='UndefinedVariable'){return false;}else{throw err;}}};var singular=function(x){return x==1;};var plural=function(x){return x>1;};var DEFAULT_PREDICATES={'singular':singular,'plural':plural,'singular?':singular,'plural?':plural,'Debug?':function(unused,context){return _TestAttribute(unused,context,['debug']);}};var FunctionRegistry=function(){return{lookup:function(user_str){return[null,null];}};};var SimpleRegistry=function(obj){return{lookup:function(user_str){var func=obj[user_str]||null;return[func,null];}};};var CallableRegistry=function(callable){return{lookup:function(user_str){var func=callable(user_str);return[func,null];}};};var PrefixRegistry=function(functions){return{lookup:function(user_str){for(var i=0;i<functions.length;i++){var name=functions[i].name,func=functions[i].func;if(user_str.slice(0,name.length)==name){ var args;var splitchar=user_str.charAt(name.length);if(splitchar===''){args=[];}else{args=user_str.split(splitchar).slice(1);}
return[func,args];}}
return[null,null];}};};var ChainedRegistry=function(registries){return{lookup:function(user_str){for(var i=0;i<registries.length;i++){var result=registries[i].lookup(user_str);if(result[0]){return result;}}
return[null,null];}};};
function Context(context,undefined_str){var stack=[{context:context,index:-1}];return{pushName:function(name){if(name===undefined||name===null){return null;}
var new_context;if(name=='@'){new_context=stack[stack.length-1].context;}else{new_context=stack[stack.length-1].context[name]||null;}
stack.push({context:new_context,index:-1});return new_context;},pop:function(){stack.pop();},next:function(){var stacktop=stack[stack.length-1]; if(stacktop.index==-1){stacktop={context:null,index:0};stack.push(stacktop);} 
var context_array=stack[stack.length-2].context; if(stacktop.index==context_array.length){stack.pop();return undefined;}
stacktop.context=context_array[stacktop.index++];return true;},_Undefined:function(){return(undefined_str===undefined)?undefined:undefined_str;},_LookUpStack:function(name){var i=stack.length-1;while(true){var frame=stack[i];if(name=='@index'){if(frame.index!=-1){ return frame.index;}}else{var context=frame.context;if(typeof context==='object'){var value=context[name];if(value!==undefined){return value;}}}
i--;if(i<=-1){return this._Undefined(name);}}},get:function(name){if(name=='@'){return stack[stack.length-1].context;}
var parts=name.split('.'),value=this._LookUpStack(parts[0]); if(value===undefined){return this._Undefined();}
for(var i=1;i<parts.length;i++){value=value[parts[i]];if(value===undefined){return this._Undefined();}}
return value;}};}
var _AbstractSection=function(spec){var that={};that.current_clause=[];that.Append=function(statement){that.current_clause.push(statement);};that.AlternatesWith=function(){throw{name:'TemplateSyntaxError',message:'{.alternates with} can only appear with in {.repeated section ...}'};};that.NewOrClause=function(pred){throw{name:'NotImplemented'};};return that;};var _Section=function(spec){var that=_AbstractSection(spec);that.statements={'default':that.current_clause};that.section_name=spec.section_name;that.Statements=function(clause){clause=clause||'default';return that.statements[clause]||[];};that.NewOrClause=function(pred){if(pred){throw{name:'TemplateSyntaxError',message:'{.or} clause only takes a predicate inside predicate blocks'};}
that.current_clause=[];that.statements['or']=that.current_clause;};return that;};var _RepeatedSection=function(spec){var that=_Section(spec);that.AlternatesWith=function(){that.current_clause=[];that.statements['alternate']=that.current_clause;};return that;};var _PredicateSection=function(spec){var that=_AbstractSection(spec); that.clauses=[];that.NewOrClause=function(pred){ pred=pred||[function(x){return true;},null];that.current_clause=[];that.clauses.push([pred,that.current_clause]);};return that;};function _Execute(statements,context,callback){for(var i=0;i<statements.length;i++){var statement=statements[i];if(typeof(statement)=='string'){callback(statement);}else{var func=statement[0];var args=statement[1];func(args,context,callback);}}}
function _DoSubstitute(statement,context,callback){var value=context.get(statement.name);if(value===undefined){throw{name:'UndefinedVariable',message:statement.name+' is not defined'};} 
for(var i=0;i<statement.formatters.length;i++){var pair=statement.formatters[i];var formatter=pair[0];var args=pair[1];value=formatter(value,context,args);}
callback(value);}
function _DoSection(args,context,callback){var block=args;var value=context.pushName(block.section_name);var do_section=false;if(value){do_section=true;}
if(value&&value.length===0){do_section=false;}
if(do_section){_Execute(block.Statements(),context,callback);context.pop();}else{context.pop();_Execute(block.Statements('or'),context,callback);}}
function _DoPredicates(args,context,callback){var block=args;var value=context.get('@');for(var i=0;i<block.clauses.length;i++){var clause=block.clauses[i];var predicate=clause[0][0];var pred_args=clause[0][1];var statements=clause[1];var do_clause=predicate(value,context,pred_args);if(do_clause){_Execute(statements,context,callback);break;}}}
function _DoRepeatedSection(args,context,callback){var block=args,items=context.pushName(block.section_name),pushed=true;if(items&&items.length>0){


var last_index=items.length-1;var statements=block.Statements();var alt_statements=block.Statements('alternate');for(var i=0;context.next()!==undefined;i++){_Execute(statements,context,callback);if(i!=last_index){_Execute(alt_statements,context,callback);}}}else{_Execute(block.Statements('or'),context,callback);}
context.pop();}
var _SECTION_RE=/(repeated)?\s*(section)\s+(\S+)?/;var _OR_RE=/or(?:\s+(.+))?/;var _IF_RE=/if(?:\s+(.+))?/;function MakeRegistry(obj){if(!obj){ return new FunctionRegistry();}else if(typeof obj==='function'){return new CallableRegistry(obj);}else if(obj.lookup!==undefined){
return obj;}else if(typeof obj==='object'){return new SimpleRegistry(obj);}}

function _Compile(template_str,options){var more_formatters=MakeRegistry(options.more_formatters); var default_formatters=PrefixRegistry([{name:'pluralize',func:_Pluralize},{name:'cycle',func:_Cycle}]);var all_formatters=new ChainedRegistry([more_formatters,SimpleRegistry(DEFAULT_FORMATTERS),default_formatters]);var more_predicates=MakeRegistry(options.more_predicates); var default_predicates=PrefixRegistry([{name:'test',func:_TestAttribute}]);var all_predicates=new ChainedRegistry([more_predicates,SimpleRegistry(DEFAULT_PREDICATES),default_predicates]);
var default_formatter;if(options.default_formatter===undefined){default_formatter='str';}else{default_formatter=options.default_formatter;}
function GetFormatter(format_str){var pair=all_formatters.lookup(format_str);if(!pair[0]){throw{name:'BadFormatter',message:format_str+' is not a valid formatter'};}
return pair;}
function GetPredicate(pred_str,test_attr){var pair=all_predicates.lookup(pred_str);if(!pair[0]){if(test_attr){pair=[_TestAttribute,[pred_str.slice(null,-1)]];}else{throw{name:'BadPredicate',message:pred_str+' is not a valid predicate'};}}
return pair;}
var format_char=options.format_char||'|';if(format_char!=':'&&format_char!='|'){throw{name:'ConfigurationError',message:'Only format characters : and | are accepted'};}
var meta=options.meta||'{}';var n=meta.length;if(n%2==1){throw{name:'ConfigurationError',message:meta+' has an odd number of metacharacters'};}
var meta_left=meta.substring(0,n/2);var meta_right=meta.substring(n/2,n);var token_re=_MakeTokenRegex(meta_left,meta_right);var current_block=_Section({});var stack=[current_block];var strip_num=meta_left.length; var token_match;var last_index=0;while(true){token_match=token_re.exec(template_str);var token;if(token_match===null){break;}else{token=token_match[0];} 
if(token_match.index>last_index){var tok=template_str.slice(last_index,token_match.index);current_block.Append(tok);}
last_index=token_re.lastIndex;var had_newline=false;if(token.slice(-1)=='\n'){token=token.slice(null,-1);had_newline=true;}
token=token.slice(strip_num,-strip_num);if(token.charAt(0)=='#'){continue;}
if(token.charAt(0)=='.'){ token=token.substring(1,token.length);var literal={'meta-left':meta_left,'meta-right':meta_right,'space':' ','tab':'\t','newline':'\n'}[token];if(literal!==undefined){current_block.Append(literal);continue;}
var new_block,func;var section_match=token.match(_SECTION_RE);if(section_match){var repeated=section_match[1];var section_name=section_match[3];if(repeated){func=_DoRepeatedSection;new_block=_RepeatedSection({section_name:section_name});}else{func=_DoSection;new_block=_Section({section_name:section_name});}
current_block.Append([func,new_block]);stack.push(new_block);current_block=new_block;continue;}
var pred_str,pred;var or_match=token.match(_OR_RE);if(or_match){pred_str=or_match[1];pred=pred_str?GetPredicate(pred_str,false):null;current_block.NewOrClause(pred);continue;}
var if_token=false,pred_token=false;var if_match=token.match(_IF_RE);if(if_match){pred_str=if_match[1];if_token=true;}else if(token.charAt(token.length-1)=='?'){pred_str=token;pred_token=true;}
if(if_token||pred_token){pred=pred_str?GetPredicate(pred_str,pred_token):null;new_block=_PredicateSection();new_block.NewOrClause(pred);current_block.Append([_DoPredicates,new_block]);stack.push(new_block);current_block=new_block;continue;}
if(token=='alternates with'){current_block.AlternatesWith();continue;}
if(token=='end'){ stack.pop();if(stack.length>0){current_block=stack[stack.length-1];}else{throw{name:'TemplateSyntaxError',message:'Got too many {end} statements'};}
continue;}} 
var parts=token.split(format_char);var formatters;var name;if(parts.length==1){if(default_formatter===null){throw{name:'MissingFormatter',message:'This template requires explicit formatters.'};}
formatters=[GetFormatter(default_formatter)];name=token;}else{formatters=[];for(var j=1;j<parts.length;j++){formatters.push(GetFormatter(parts[j]));}
name=parts[0];}
current_block.Append([_DoSubstitute,{name:name,formatters:formatters}]);if(had_newline){current_block.Append('\n');}} 
current_block.Append(template_str.slice(last_index));if(stack.length!==1){throw{name:'TemplateSyntaxError',message:'Got too few {end} statements'};}
return current_block;}


function Template(template_str,options){if(!(this instanceof Template)){return new Template(template_str,options);}
this._options=options||{};this._program=_Compile(template_str,this._options);}
Template.prototype.render=function(context,callback){
if(typeof context.get!=='function'){ context=Context(context,this._options.undefined_str);}
_Execute(this._program.Statements(),context,callback);};Template.prototype.expand=function(data_dict){var tokens=[];this.render(data_dict,function(x){tokens.push(x);});return tokens.join('');};


var OPTION_RE=/^([a-zA-Z\-]+):\s*(.*)/;var OPTION_NAMES=['meta','format-char','default-formatter','undefined-str'];var OPTION_NAMES_RE=new RegExp(OPTION_NAMES.join('|'));function fromString(s,options){var parsed={},begin=0,end=0,parsedAny=false;while(true){var parsedOption=false;end=s.indexOf('\n',begin);if(end==-1){break;}
var line=s.slice(begin,end);begin=end+1;var match=line.match(OPTION_RE);if(match!==null){var name=match[1].toLowerCase(),value=match[2];if(name.match(OPTION_NAMES_RE)){name=name.replace('-','_');value=value.replace(/^\s+/,'').replace(/\s+$/,'');if(name=='default_formatter'&&value.toLowerCase()=='none'){value=null;}
parsed[name]=value;parsedOption=true;parsedAny=true;}}
if(!parsedOption){break;}}
 
var body=parsedAny?s.slice(begin):s;for(var o in options){parsed[o]=options[o];}
return Template(body,parsed);}

function expand(template_str,data,options){var t=Template(template_str,options);return t.expand(data);}
return{Template:Template,HtmlEscape:HtmlEscape,FunctionRegistry:FunctionRegistry,SimpleRegistry:SimpleRegistry,CallableRegistry:CallableRegistry,ChainedRegistry:ChainedRegistry,fromString:fromString,expand:expand, _Section:_Section};}();
